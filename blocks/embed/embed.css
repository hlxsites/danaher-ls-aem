dhlsBtn {
  position: relative;
  overflow: hidden;
  color: rgb(102, 16, 242);
  background-color: rgb(255, 255, 255);
  border-color: rgb(102, 16, 242);
  border-width: 2px;
  border-style: solid;
  transition: all 0.3s ease-in-out;
}

dhlsBtn:hover {
  color: #ffffff;
  background-color: rgb(102, 16, 242);
  border-color: rgb(102, 16, 242);
}

dhlsBtn:hover::before {
  transform: translateX(300px) skewX(-15deg);
  opacity: 1;
}

dhlsBtn:hover::after {
  transform: translateX(300px) skewX(-15deg);
}

dhlsBtn::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 60px;
  height: 100%;
  background: rgba(255, 255, 255, 0.5);
  filter: blur(30px);
  transform: translateX(-100px) skewX(-15deg);
  opacity: 0.5;
  pointer-events: none;
  transition: all 0.9s ease;
}

dhlsBtn::after {
  content: "";
  position: absolute;
  top: 0;
  left: 30px;
  width: 30px;
  height: 100%;
  background: rgba(255, 255, 255, 0.2);
  filter: blur(5px);
  transform: translateX(-100px) skewX(-15deg);
  pointer-events: none;
  transition: all 0.9s ease;
}

.embed-wrapper :is(.absolute) {
  position: absolute;
}

.embed-wrapper :is(.relative) {
  position: relative;
}

.embed-wrapper :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto;
}

.embed-wrapper :is(.my-8) {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.embed-wrapper :is(.block) {
  display: block;
}

.embed-wrapper :is(.flex) {
  display: flex;
}

.embed-wrapper :is(.w-full) {
  width: 100%;
}

.embed-wrapper :is(.justify-center) {
  justify-content: center;
}

.embed-wrapper :is(.border) {
  border-width: 1px;
}

.embed-wrapper :is(.bg-danaherlightblue-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 251 253 / var(--tw-bg-opacity));
}

.embed-wrapper :is(.bg-danaherpurple-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(64 0 165 / var(--tw-bg-opacity));
}

.embed-wrapper :is(.bg-gray-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.embed-wrapper :is(.text-center) {
  text-align: center;
}

.embed-wrapper :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}