.logo-clouds-wrapper :is(.relative) {
  position: relative
}

.logo-clouds-wrapper :is(.col-span-1) {
  grid-column: span 1 / span 1
}

.logo-clouds-wrapper :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto
}

.logo-clouds-wrapper :is(.my-2) {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem
}

.logo-clouds-wrapper :is(.mt-8) {
  margin-top: 2rem
}

.logo-clouds-wrapper :is(.block) {
  display: block
}

.logo-clouds-wrapper :is(.flex) {
  display: flex
}

.logo-clouds-wrapper :is(.grid) {
  display: grid
}

.logo-clouds-wrapper :is(.h-12) {
  height: 3rem
}

.logo-clouds-wrapper :is(.h-full) {
  height: 100%
}

.logo-clouds-wrapper :is(.w-60) {
  width: 15rem
}

.logo-clouds-wrapper :is(.w-full) {
  width: 100%
}

.logo-clouds-wrapper :is(.max-w-7xl) {
  max-width: 80rem
}

.logo-clouds-wrapper :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.logo-clouds-wrapper :is(.grid-cols-1) {
  grid-template-columns: repeat(1, minmax(0, 1fr))
}

.logo-clouds-wrapper :is(.grid-cols-2) {
  grid-template-columns: repeat(2, minmax(0, 1fr))
}

.logo-clouds-wrapper :is(.items-center) {
  align-items: center
}

.logo-clouds-wrapper :is(.justify-center) {
  justify-content: center
}

.logo-clouds-wrapper :is(.gap-0) {
  gap: 0px
}

.logo-clouds-wrapper :is(.gap-0\.5) {
  gap: 0.125rem
}

.logo-clouds-wrapper :is(.gap-x-6) {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem
}

.logo-clouds-wrapper :is(.rounded-xl) {
  border-radius: 0.75rem
}

.logo-clouds-wrapper :is(.border-2) {
  border-width: 2px
}

.logo-clouds-wrapper :is(.border-transparent) {
  border-color: transparent
}

.logo-clouds-wrapper :is(.bg-danaherlightblue-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 251 253 / var(--tw-bg-opacity))
}

.logo-clouds-wrapper :is(.bg-gray-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity))
}

.logo-clouds-wrapper :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity))
}

.logo-clouds-wrapper :is(.px-8) {
  padding-left: 2rem;
  padding-right: 2rem
}

.logo-clouds-wrapper :is(.py-8) {
  padding-top: 2rem;
  padding-bottom: 2rem
}

.logo-clouds-wrapper :is(.text-3xl) {
  font-size: 1.875rem;
  line-height: 2.25rem
}

.logo-clouds-wrapper :is(.text-lg) {
  font-size: 1.125rem;
  line-height: 1.75rem
}

.logo-clouds-wrapper :is(.font-medium) {
  font-weight: 500
}

.logo-clouds-wrapper :is(.font-semibold) {
  font-weight: 700
}

.logo-clouds-wrapper :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.logo-clouds-wrapper :is(.duration-500) {
  transition-duration: 500ms
}

.logo-clouds-wrapper :is(.hover\:scale-105:hover) {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

@media (min-width: 768px) {
  .logo-clouds-wrapper :is(.md\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr))
  }
}

@media (min-width: 1024px) {
  .logo-clouds-wrapper :is(.lg\:mt-0) {
    margin-top: 0px
  }

  .logo-clouds-wrapper :is(.lg\:grid) {
    display: grid
  }

  .logo-clouds-wrapper :is(.lg\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr))
  }

  .logo-clouds-wrapper :is(.lg\:items-center) {
    align-items: center
  }

  .logo-clouds-wrapper :is(.lg\:gap-8) {
    gap: 2rem
  }
}