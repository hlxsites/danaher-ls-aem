.header-wrapper :is(.fixed) {
  position: fixed
}

.header-wrapper :is(.absolute) {
  position: absolute
}

.header-wrapper :is(.relative) {
  position: relative
}

.header-wrapper :is(.inset-x-0) {
  left: 0px;
  right: 0px
}

.header-wrapper :is(.left-0) {
  left: 0px
}

.header-wrapper :is(.left-4) {
  left: 1rem
}

.header-wrapper :is(.left-6) {
  left: 1.5rem
}

.header-wrapper :is(.top-0) {
  top: 0px
}

.header-wrapper :is(.top-4) {
  top: 1rem
}

.header-wrapper :is(.top-full) {
  top: 100%
}

.header-wrapper :is(.z-10) {
  z-index: 10
}

.header-wrapper :is(.z-20) {
  z-index: 20
}

.header-wrapper :is(.z-40) {
  z-index: 40
}

.header-wrapper :is(.z-50) {
  z-index: 50
}

.header-wrapper :is(.order-last) {
  order: 9999
}

.header-wrapper :is(.order-none) {
  order: 0
}

.header-wrapper :is(.-my-px) {
  margin-top: -1px;
  margin-bottom: -1px
}

.header-wrapper :is(.mx-10) {
  margin-left: 2.5rem;
  margin-right: 2.5rem
}

.header-wrapper :is(.mx-2) {
  margin-left: 0.5rem;
  margin-right: 0.5rem
}

.header-wrapper :is(.mx-6) {
  margin-left: 1.5rem;
  margin-right: 1.5rem
}

.header-wrapper :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto
}

.header-wrapper :is(.my-auto) {
  margin-top: auto;
  margin-bottom: auto
}

.header-wrapper :is(.-mr-px) {
  margin-right: -1px
}

.header-wrapper :is(.mb-2) {
  margin-bottom: 0.5rem
}

.header-wrapper :is(.mb-\[2px\]) {
  margin-bottom: 2px
}

.header-wrapper :is(.ml-1) {
  margin-left: 0.25rem
}

.header-wrapper :is(.ml-2) {
  margin-left: 0.5rem
}

.header-wrapper :is(.ml-auto) {
  margin-left: auto
}

.header-wrapper :is(.mr-2) {
  margin-right: 0.5rem
}

.header-wrapper :is(.mt-0) {
  margin-top: 0px
}

.header-wrapper :is(.mt-3) {
  margin-top: 0.75rem
}

.header-wrapper :is(.line-clamp-2) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2
}

.header-wrapper :is(.block) {
  display: block
}

.header-wrapper :is(.flex) {
  display: flex
}

.header-wrapper :is(.inline-flex) {
  display: inline-flex
}

.header-wrapper :is(.grid) {
  display: grid
}

.header-wrapper :is(.hidden) {
  display: none
}

.header-wrapper :is(.h-10) {
  height: 2.5rem
}

.header-wrapper :is(.h-12) {
  height: 3rem
}

.header-wrapper :is(.h-14) {
  height: 3.5rem
}

.header-wrapper :is(.h-2) {
  height: 0.5rem
}

.header-wrapper :is(.h-3) {
  height: 0.75rem
}

.header-wrapper :is(.h-4) {
  height: 1rem
}

.header-wrapper :is(.h-6) {
  height: 1.5rem
}

.header-wrapper :is(.h-7) {
  height: 1.75rem
}

.header-wrapper :is(.h-8) {
  height: 2rem
}

.header-wrapper :is(.h-full) {
  height: 100%
}

.header-wrapper :is(.h-screen) {
  height: 100vh
}

.header-wrapper :is(.min-h-\[40px\]) {
  min-height: 40px
}

.header-wrapper :is(.w-12) {
  width: 3rem
}

.header-wrapper :is(.w-14) {
  width: 3.5rem
}

.header-wrapper :is(.w-2) {
  width: 0.5rem
}

.header-wrapper :is(.w-3) {
  width: 0.75rem
}

.header-wrapper :is(.w-4) {
  width: 1rem
}

.header-wrapper :is(.w-6) {
  width: 1.5rem
}

.header-wrapper :is(.w-8) {
  width: 2rem
}

.header-wrapper :is(.w-9) {
  width: 2.25rem
}

.header-wrapper :is(.w-\[360px\]) {
  width: 360px
}

.header-wrapper :is(.w-auto) {
  width: auto
}

.header-wrapper :is(.w-full) {
  width: 100%
}

.header-wrapper :is(.max-w-7xl) {
  max-width: 80rem
}

.header-wrapper :is(.max-w-full) {
  max-width: 100%
}

.header-wrapper :is(.max-w-sm) {
  max-width: 24rem
}

.header-wrapper :is(.shrink-0) {
  flex-shrink: 0
}

.header-wrapper :is(.flex-grow) {
  flex-grow: 1
}

.header-wrapper :is(.grow) {
  flex-grow: 1
}

.header-wrapper :is(.basis-1\/2) {
  flex-basis: 50%
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0
  }
}

.header-wrapper :is(.animate-ping) {
  animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite
}

.header-wrapper :is(.cursor-pointer) {
  cursor: pointer
}

.header-wrapper :is(.select-none) {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none
}

.header-wrapper :is(.grid-rows-1) {
  grid-template-rows: repeat(1, minmax(0, 1fr))
}

.header-wrapper :is(.flex-row) {
  flex-direction: row
}

.header-wrapper :is(.flex-col) {
  flex-direction: column
}

.header-wrapper :is(.flex-wrap) {
  flex-wrap: wrap
}

.header-wrapper :is(.items-center) {
  align-items: center
}

.header-wrapper :is(.justify-end) {
  justify-content: flex-end
}

.header-wrapper :is(.justify-center) {
  justify-content: center
}

.header-wrapper :is(.justify-between) {
  justify-content: space-between
}

.header-wrapper :is(.gap-2) {
  gap: 0.5rem
}

.header-wrapper :is(.gap-5) {
  gap: 1.25rem
}

.header-wrapper :is(.gap-x-1) {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem
}

.header-wrapper :is(.gap-x-4) {
  -moz-column-gap: 1rem;
       column-gap: 1rem
}

.header-wrapper :is(.gap-y-2) {
  row-gap: 0.5rem
}

.header-wrapper :is(.space-y-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse))
}

.header-wrapper :is(.overflow-auto) {
  overflow: auto
}

.header-wrapper :is(.overflow-hidden) {
  overflow: hidden
}

.header-wrapper :is(.break-all) {
  word-break: break-all
}

.header-wrapper :is(.rounded) {
  border-radius: 0.25rem
}

.header-wrapper :is(.rounded-full) {
  border-radius: 9999px
}

.header-wrapper :is(.rounded-lg) {
  border-radius: 0.5rem
}

.header-wrapper :is(.rounded-md) {
  border-radius: 0.375rem
}

.header-wrapper :is(.border) {
  border-width: 1px
}

.header-wrapper :is(.border-0) {
  border-width: 0px
}

.header-wrapper :is(.border-b) {
  border-bottom-width: 1px
}

.header-wrapper :is(.border-black) {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity))
}

.header-wrapper :is(.border-gray-600) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity))
}

.header-wrapper :is(.bg-black) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danaherblue-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(13 49 114 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danahergray-150) {
  --tw-bg-opacity: 1;
  background-color: rgb(118 118 118 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danaherlightblue-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 251 253 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danaherlightblue-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(59 199 229 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danaherorange-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 96 22 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danaherpurple-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(117 35 255 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-danaherpurple-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(64 0 165 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-gray-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity))
}

.header-wrapper :is(.bg-transparent) {
  background-color: transparent
}

.header-wrapper :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity))
}

.header-wrapper :is(.fill-current) {
  fill: currentColor
}

.header-wrapper :is(.object-contain) {
  -o-object-fit: contain;
     object-fit: contain
}

.header-wrapper :is(.p-1) {
  padding: 0.25rem
}

.header-wrapper :is(.p-2) {
  padding: 0.5rem
}

.header-wrapper :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem
}

.header-wrapper :is(.px-3) {
  padding-left: 0.75rem;
  padding-right: 0.75rem
}

.header-wrapper :is(.px-4) {
  padding-left: 1rem;
  padding-right: 1rem
}

.header-wrapper :is(.py-2) {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem
}

.header-wrapper :is(.py-3) {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem
}

.header-wrapper :is(.py-3\.5) {
  padding-top: 0.875rem;
  padding-bottom: 0.875rem
}

.header-wrapper :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem
}

.header-wrapper :is(.pb-0) {
  padding-bottom: 0px
}

.header-wrapper :is(.pl-1) {
  padding-left: 0.25rem
}

.header-wrapper :is(.pl-2) {
  padding-left: 0.5rem
}

.header-wrapper :is(.pr-3) {
  padding-right: 0.75rem
}

.header-wrapper :is(.pt-0) {
  padding-top: 0px
}

.header-wrapper :is(.text-left) {
  text-align: left
}

.header-wrapper :is(.text-2xl) {
  font-size: 1.5rem;
  line-height: 2rem
}

.header-wrapper :is(.text-base) {
  font-size: 1rem;
  line-height: 1.5rem
}

.header-wrapper :is(.text-lg) {
  font-size: 1.125rem;
  line-height: 1.75rem
}

.header-wrapper :is(.text-sm) {
  font-size: 0.875rem;
  line-height: 1.25rem
}

.header-wrapper :is(.text-xs) {
  font-size: 0.75rem;
  line-height: 1rem
}

.header-wrapper :is(.font-bold) {
  font-weight: 700
}

.header-wrapper :is(.font-extralight) {
  font-weight: 200
}

.header-wrapper :is(.font-medium) {
  font-weight: 500
}

.header-wrapper :is(.font-semibold) {
  font-weight: 700
}

.header-wrapper :is(.tracking-wider) {
  letter-spacing: 0.05em
}

.header-wrapper :is(.text-black) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity))
}

.header-wrapper :is(.text-danaherpurple-500) {
  --tw-text-opacity: 1;
  color: rgb(117 35 255 / var(--tw-text-opacity))
}

.header-wrapper :is(.text-gray-900) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity))
}

.header-wrapper :is(.opacity-75) {
  opacity: 0.75
}

.header-wrapper :is(.shadow-lg) {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.header-wrapper :is(.shadow-sm) {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.header-wrapper :is(.outline-none) {
  outline: 2px solid transparent;
  outline-offset: 2px
}

.header-wrapper :is(.ring-0) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

.header-wrapper :is(.ring-offset-0) {
  --tw-ring-offset-width: 0px
}

.header-wrapper :is(.invert) {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.header-wrapper :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.header-wrapper :is(.backdrop-brightness-50) {
  --tw-backdrop-brightness: brightness(.5);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)
}

.header-wrapper :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.header-wrapper :is(.transition-all) {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.header-wrapper :is(.transition-transform) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

.header-wrapper :is(.ease-out) {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1)
}

.hover\:bg-danaherpurple-50:hover {
  background-color: #EADEFF
}

.\[\&\>li\.active\]\:bg-danaherpurple-50>li.active {
  background-color: #EADEFF
}

.header-wrapper :is(.focus-within\:ring:focus-within) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

.header-wrapper :is(.hover\:bg-danahergray-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity))
}

.header-wrapper :is(.hover\:bg-danaherpurple-50:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(234 222 255 / var(--tw-bg-opacity))
}

.header-wrapper :is(.hover\:bg-gray-200\/30:hover) {
  background-color: rgb(229 231 235 / 0.3)
}

.header-wrapper :is(.hover\:bg-transparent:hover) {
  background-color: transparent
}

.header-wrapper :is(.hover\:fill-cyan-600:hover) {
  fill: #0891b2
}

.header-wrapper :is(.hover\:font-medium:hover) {
  font-weight: 500
}

.header-wrapper :is(.hover\:text-black:hover) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity))
}

.header-wrapper :is(.hover\:text-cyan-600:hover) {
  --tw-text-opacity: 1;
  color: rgb(8 145 178 / var(--tw-text-opacity))
}

.header-wrapper :is(.hover\:text-danaherpurple-800:hover) {
  --tw-text-opacity: 1;
  color: rgb(64 0 165 / var(--tw-text-opacity))
}

.header-wrapper :is(.group:hover .group-hover\:-translate-x-0) {
  --tw-translate-x: -0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.header-wrapper :is(.group:hover .group-hover\:-translate-x-0\.5) {
  --tw-translate-x: -0.125rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.header-wrapper :is(.group:hover .group-hover\:translate-x-0) {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.header-wrapper :is(.group:hover .group-hover\:translate-x-0\.5) {
  --tw-translate-x: 0.125rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.header-wrapper :is(.group:hover .group-hover\:rotate-180) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.header-wrapper :is(.group:hover .group-hover\:bg-danahergray-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(97 97 97 / var(--tw-bg-opacity))
}

@media (min-width: 768px) {
  .header-wrapper :is(.md\:order-last) {
    order: 9999
  }

  .header-wrapper :is(.md\:order-none) {
    order: 0
  }

  .header-wrapper :is(.md\:mx-5) {
    margin-left: 1.25rem;
    margin-right: 1.25rem
  }

  .header-wrapper :is(.md\:ml-14) {
    margin-left: 3.5rem
  }

  .header-wrapper :is(.md\:mr-4) {
    margin-right: 1rem
  }

  .header-wrapper :is(.md\:block) {
    display: block
  }

  .header-wrapper :is(.md\:hidden) {
    display: none
  }

  .header-wrapper :is(.md\:w-20) {
    width: 5rem
  }

  .header-wrapper :is(.md\:w-3\/5) {
    width: 60%
  }

  .header-wrapper :is(.md\:w-full) {
    width: 100%
  }

  .header-wrapper :is(.md\:p-0) {
    padding: 0px
  }

  .header-wrapper :is(.md\:py-4) {
    padding-top: 1rem;
    padding-bottom: 1rem
  }
}

@media (min-width: 1024px) {
  .header-wrapper :is(.lg\:my-4) {
    margin-top: 1rem;
    margin-bottom: 1rem
  }

  .header-wrapper :is(.lg\:block) {
    display: block
  }

  .header-wrapper :is(.lg\:inline) {
    display: inline
  }

  .header-wrapper :is(.lg\:flex) {
    display: flex
  }

  .header-wrapper :is(.lg\:inline-flex) {
    display: inline-flex
  }

  .header-wrapper :is(.lg\:hidden) {
    display: none
  }

  .header-wrapper :is(.lg\:h-\[100px\]) {
    height: 100px
  }

  .header-wrapper :is(.lg\:w-44) {
    width: 11rem
  }

  .header-wrapper :is(.lg\:grid-rows-2) {
    grid-template-rows: repeat(2, minmax(0, 1fr))
  }

  @media (min-width: 1024px) {
    .header-wrapper :is(.lg\:lg\:grid-rows-1) {
      grid-template-rows: repeat(1, minmax(0, 1fr))
    }

    .header-wrapper :is(.lg\:lg\:grid-rows-2) {
      grid-template-rows: repeat(2, minmax(0, 1fr))
    }
  }

  .header-wrapper :is(.lg\:px-8) {
    padding-left: 2rem;
    padding-right: 2rem
  }

  .header-wrapper :is(.lg\:\!pb-4) {
    padding-bottom: 1rem !important
  }

  .header-wrapper :is(.lg\:pb-\[6\.25rem\]) {
    padding-bottom: 6.25rem
  }

  .header-wrapper :is(.lg\:pl-2) {
    padding-left: 0.5rem
  }

  .header-wrapper :is(.lg\:pt-4) {
    padding-top: 1rem
  }
}

.header-wrapper :is(.\[\&\>a\]\:w-full>a) {
  width: 100%
}

.header-wrapper :is(.\[\&\>li\.active\]\:bg-danaherpurple-50>li.active) {
  --tw-bg-opacity: 1;
  background-color: rgb(234 222 255 / var(--tw-bg-opacity))
}

.header-wrapper :is(.\[\&\>li\.active\]\:font-bold>li.active) {
  font-weight: 700
}

.header-wrapper :is(.\[\&_svg\>use\]\:stroke-black svg>use) {
  stroke: #000
}

.header-wrapper :is(.\[\&_svg\>use\]\:stroke-danaherpurple-500 svg>use) {
  stroke: #7523FF
}

.header-wrapper :is(.\[\&_svg\>use\]\:stroke-gray-500\/70 svg>use) {
  stroke: rgb(107 114 128 / 0.7)
}

.header-wrapper :is(.\[\&_svg\>use\]\:stroke-2 svg>use) {
  stroke-width: 2
}

.header-wrapper :is(.\[\&_svg\>use\]\:hover\:stroke-black:hover svg>use) {
  stroke: #000
}

.header-wrapper :is(.\[\&_svg\>use\]\:hover\:stroke-danaherpurple-800:hover svg>use) {
  stroke: #4000A5
}

.header-wrapper :is(.\[\&_svg\]\:stroke-white svg) {
  stroke: #fff
}